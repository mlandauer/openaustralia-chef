<Server port="8006" shutdown="SHUTDOWN">

  <Service name="Catalina">

    <Connector port="8090"
      maxHttpHeaderSize="8192" maxThreads="150" minSpareThreads="25" maxSpareThreads="75" useBodyEncodingForURI="true"
      enableLookups="false" redirectPort="8443" acceptCount="100" connectionTimeout="20000" disableUploadTimeout="true" />

    <Engine name="Catalina" defaultHost="localhost">
      <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">

        <Context path="" docBase="${catalina.home}/atlassian-jira" reloadable="false">
          <Resource name="jdbc/JiraDS" auth="Container" type="javax.sql.DataSource"
            username="<%= @node[:jira_database_user] %>"
            password="<%= @node[:jira_database_password] %>"
            driverClassName="com.mysql.jdbc.Driver"
            url="jdbc:mysql://<%= @node[:jira_database_host] %>/<%= @node[:jira_database_name]%>?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF8"
            minEvictableIdleTimeMillis="4000"
            timeBetweenEvictionRunsMillis="5000"
            maxActive="20" />

          <!-- NOTE: When a database server reboots or their is a network failure all the connections in the
          * connection pool are broken and normally this requires a Application Server reboot. If you include the
          * parameter validationQuery="{QUERY FOR YOUR DB HERE} as show below a new connection is created to replace it.
          * For more information see http://confluence.atlassian.com/display/JIRA/Surviving+Connection+Closures
          *
          * validationQuery="Select 1"
             -->

          <!-- NOTE: If you use a database other than hsqldb:
          * delete the minEvictableIdleTimeMillis and timeBetweenEvictionRunsMillis attributes
          * change the database type in atlassian-jira/WEB-INF/classes/entityengine.xml
          -->

          <Resource name="UserTransaction" auth="Container" type="javax.transaction.UserTransaction"
            factory="org.objectweb.jotm.UserTransactionFactory" jotm.timeout="60"/>
          <Manager pathname=""/>
        </Context>

      </Host>

      <!--
            Enable access logging.

            This should produce access_log.<date> files in the 'logs' directory.

            The output access log lies has the following fields :

            IP Request_Id User Timestamp  "HTTP_Method URL Protocol_Version" HTTP_Status_Code ResponseSize_in_Bytes RequestTime_In_Millis Referer User_Agent ASESSIONID

            eg :

            192.168.3.238 1243466536012x12x1 admin [28/May/2009:09:22:17 +1000] "GET /jira/secure/admin/jira/IndexProgress.jspa?taskId=1 HTTP/1.1" 200 24267 1070 "http://carltondraught.sydney.atlassian.com:8090/jira/secure/admin/jira/IndexAdmin.jspa" "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.10) Gecko/2009042523 Ubuntu/9.04 (jaunty) Firefox/3.0.10" "C2C99B632EE0F41E90F8EF7A201F6A78"

            NOTES:

            The RequestId is a millis_since_epoch plus request number plus number of concurrent users

            The Request time is in milliseconds

            The ASESSIONID is an MD5 hash of the JSESSIONID and hence is safe to publish within logs.  A session cannot be reconstructed from it.

            See http://tomcat.apache.org/tomcat-5.5-doc/config/valve.html for more information on Tomcat Access Log Valves
       -->
      <Valve className="org.apache.catalina.valves.AccessLogValve" resolveHosts="false"
              pattern="%a %{jira.request.id}r %{jira.request.username}r %t &quot;%m %U%q %H&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assession.id}r&quot;"/>

    </Engine>

        <!-- To run JIRA via HTTPS:
              * Uncomment the Connector below
              * Execute:
                  %JAVA_HOME%\bin\keytool -genkey -alias tomcat -keyalg RSA (Windows)
                  $JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA  (Unix)
                with a password value of "changeit" for both the certificate and the keystore itself.
              * If you are on JDK1.3 or earlier, download and install JSSE 1.0.2 or later, and put the JAR files into
                "$JAVA_HOME/jre/lib/ext"
              * Restart and visit https://localhost:8443/

              For more info, see http://jakarta.apache.org/tomcat/tomcat-5.5-doc/ssl-howto.html
         -->
        <!--
            <Connector port="8443" maxHttpHeaderSize="8192"
              maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
              enableLookups="false" disableUploadTimeout="true"
              acceptCount="100" scheme="https" secure="true"
              clientAuth="false" sslProtocol="TLS" useBodyEncodingForURI="true"/>
        -->

        <!-- To connect to an external web server (typically Apache) -->
        <!-- Define an AJP 1.3 Connector on port 8009 -->
        <!--
            <Connector port="8009"
              enableLookups="false" redirectPort="8443" protocol="AJP/1.3" />
        -->


  </Service>

  <Listener className="org.apache.catalina.mbeans.ServerLifecycleListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.storeconfig.StoreConfigLifecycleListener"/>

</Server>
